// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Infrastructure.Data;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Data.AppContext))]
    internal partial class InventuraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.DietPlanAggregate.DietPlan", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("DietPlans");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.DietPlanAggregate.DietPlanPeriod", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int?>("DietPlanId")
                    .HasColumnType("int");

                b.Property<DateTime>("EndDate")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("StartDate")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("DietPlanId");

                b.ToTable("DietPlanPeriods");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.FoodProduct", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<float>("Calories")
                    .HasColumnType("real");

                b.Property<float>("Carbohydrates")
                    .HasColumnType("real");

                b.Property<float>("Fats")
                    .HasColumnType("real");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<float>("Protein")
                    .HasColumnType("real");

                b.Property<int?>("UnitOfMeasureId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UnitOfMeasureId");

                b.ToTable("FoodProducts");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.FoodStock", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<float>("Amount")
                    .HasColumnType("real");

                b.Property<DateTime?>("BestUseByDate")
                    .HasColumnType("datetime2");

                b.Property<DateTime?>("DateOfPurchase")
                    .HasColumnType("datetime2");

                b.Property<int?>("FoodProductId")
                    .HasColumnType("int");

                b.Property<float?>("LowerAmount")
                    .HasColumnType("real");

                b.Property<float?>("UpperAmount")
                    .HasColumnType("real");

                b.HasKey("Id");

                b.HasIndex("FoodProductId");

                b.ToTable("FoodStocks");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.MealAggregate.Meal", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int?>("DietPlanId")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("DietPlanId");

                b.ToTable("Meals");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.MealAggregate.MealItem", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<float>("Amount")
                    .HasColumnType("real");

                b.Property<int?>("FoodProductId")
                    .HasColumnType("int");

                b.Property<int?>("MealId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("FoodProductId");

                b.HasIndex("MealId");

                b.ToTable("MealItems");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.NotificationRule", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int?>("FoodProductId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("FoodProductId");

                b.ToTable("NotificationRules");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.UnitOfMeasure", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Measure")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("UnitOfMeasures");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.UserAggregate.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("FirstName")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("LastName")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.UserAggregate.UserContactInfo", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Contact")
                    .HasColumnType("nvarchar(max)");

                b.Property<int?>("NotificationRuleId")
                    .HasColumnType("int");

                b.Property<int?>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("NotificationRuleId");

                b.HasIndex("UserId");

                b.ToTable("UserContactInfos");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.DietPlanAggregate.DietPlanPeriod", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.DietPlanAggregate.DietPlan", "DietPlan")
                    .WithMany()
                    .HasForeignKey("DietPlanId");

                b.Navigation("DietPlan");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.FoodProduct", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.UnitOfMeasure", "UnitOfMeasure")
                    .WithMany()
                    .HasForeignKey("UnitOfMeasureId");

                b.Navigation("UnitOfMeasure");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.FoodStock", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.FoodProduct", "FoodProduct")
                    .WithMany()
                    .HasForeignKey("FoodProductId");

                b.Navigation("FoodProduct");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.MealAggregate.Meal", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.DietPlanAggregate.DietPlan", null)
                    .WithMany("Meals")
                    .HasForeignKey("DietPlanId");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.MealAggregate.MealItem", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.FoodProduct", "FoodProduct")
                    .WithMany()
                    .HasForeignKey("FoodProductId");

                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.MealAggregate.Meal", null)
                    .WithMany("Items")
                    .HasForeignKey("MealId");

                b.Navigation("FoodProduct");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.NotificationRule", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.FoodProduct", "FoodProduct")
                    .WithMany()
                    .HasForeignKey("FoodProductId");

                b.Navigation("FoodProduct");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.UserAggregate.UserContactInfo", b =>
            {
                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.NotificationRule", null)
                    .WithMany("UserContactInfos")
                    .HasForeignKey("NotificationRuleId");

                b.HasOne("Microsoft.Inventura.ApplicationCore.Entities.UserAggregate.User", null)
                    .WithMany("UserContactInfos")
                    .HasForeignKey("UserId");
            });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.DietPlanAggregate.DietPlan",
                b => { b.Navigation("Meals"); });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.MealAggregate.Meal",
                b => { b.Navigation("Items"); });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.NotificationRule",
                b => { b.Navigation("UserContactInfos"); });

            modelBuilder.Entity("Microsoft.Inventura.ApplicationCore.Entities.UserAggregate.User",
                b => { b.Navigation("UserContactInfos"); });
#pragma warning restore 612, 618
        }
    }
}