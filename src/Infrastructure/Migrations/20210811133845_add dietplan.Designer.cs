// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Data.AppContext))]
    [Migration("20210811133845_add dietplan")]
    partial class adddietplan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ApplicationCore.Entities.DietPlanAggregate.DietPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DietPlans");
                });

            modelBuilder.Entity("ApplicationCore.Entities.DietPlanAggregate.DietPlanMeal", b =>
                {
                    b.Property<int>("DietPlanId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.HasKey("DietPlanId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("DietPlanMeal");
                });

            modelBuilder.Entity("ApplicationCore.Entities.FoodProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Calories")
                        .HasColumnType("real");

                    b.Property<float>("Carbohydrates")
                        .HasColumnType("real");

                    b.Property<float>("Fats")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Protein")
                        .HasColumnType("real");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("FoodProducts");
                });

            modelBuilder.Entity("ApplicationCore.Entities.FoodStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("BestUseByDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodProductId")
                        .HasColumnType("int");

                    b.Property<float?>("LowerAmount")
                        .HasColumnType("real");

                    b.Property<float?>("UpperAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FoodProductId");

                    b.ToTable("FoodStock");
                });

            modelBuilder.Entity("ApplicationCore.Entities.MealAggregate.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("ApplicationCore.Entities.MealAggregate.MealItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("FoodProductId")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodProductId");

                    b.HasIndex("MealId");

                    b.ToTable("MealItems");
                });

            modelBuilder.Entity("ApplicationCore.Entities.UnitOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Measure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasures");
                });

            modelBuilder.Entity("ApplicationCore.Entities.DietPlanAggregate.DietPlanMeal", b =>
                {
                    b.HasOne("ApplicationCore.Entities.DietPlanAggregate.DietPlan", "DietPlan")
                        .WithMany("DietPlanMeals")
                        .HasForeignKey("DietPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.MealAggregate.Meal", "Meal")
                        .WithMany("DietPlanMeals")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DietPlan");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("ApplicationCore.Entities.FoodProduct", b =>
                {
                    b.HasOne("ApplicationCore.Entities.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("ApplicationCore.Entities.FoodStock", b =>
                {
                    b.HasOne("ApplicationCore.Entities.FoodProduct", "FoodProduct")
                        .WithMany()
                        .HasForeignKey("FoodProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodProduct");
                });

            modelBuilder.Entity("ApplicationCore.Entities.MealAggregate.MealItem", b =>
                {
                    b.HasOne("ApplicationCore.Entities.FoodProduct", "FoodProduct")
                        .WithMany()
                        .HasForeignKey("FoodProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.MealAggregate.Meal", null)
                        .WithMany("Meals")
                        .HasForeignKey("MealId");

                    b.Navigation("FoodProduct");
                });

            modelBuilder.Entity("ApplicationCore.Entities.DietPlanAggregate.DietPlan", b =>
                {
                    b.Navigation("DietPlanMeals");
                });

            modelBuilder.Entity("ApplicationCore.Entities.MealAggregate.Meal", b =>
                {
                    b.Navigation("DietPlanMeals");

                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
